cmake_minimum_required(VERSION 3.2)

#Sets PATCH version to GitHub Actions run number 
if(DEFINED ENV{GITHUB_RUN_NUMBER})
    set(BUILD_NUMBER $ENV{GITHUB_RUN_NUMBER})
else()
    set(BUILD_NUMBER 0)
endif()

#Project hellow
project(hellow VERSION 0.0.${BUILD_NUMBER})
message(STATUS "Patch Version: ${PROJECT_VERSION_PATCH}")

configure_file(src/cmake_config.h.in ${PROJECT_SOURCE_DIR}/src/cmake_config.h)

add_executable(hellow src/main.cpp)

add_executable(test_version test/test.cpp)

set_target_properties(hellow test_version PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED ON
    COMPILE_OPTIONS "-Wpedantic;-Wall;-Wextra"
)

include_directories(${PROJECT_SOURCE_DIR}/src)

install(TARGETS hellow RUNTIME DESTINATION bin)

set(CPACK_GENERATOR DEB)

set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")

set(CPACK_PACKAGE_CONTACT sanya2003ogorodov@gmail.com)

set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)

include(CPack)

enable_testing()

add_test(hellow_tests test_version)